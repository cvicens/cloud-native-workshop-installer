#!/bin/sh

TOKEN=$(oc whoami -t | base64)

NAMESPACE="ccn-installer"
#CA_CRT="LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJUWphOGNhS3J3NnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1ERTNNVFF4T0RRNVdoY05Namt4TURFME1UUXhPRFE1V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlFXaS9sS0lURFgxNHFRVkd4Z3dsdGJ2a0ZQQkE5cgpPZnk3WWg4VW52NHJ4VWU1TE02ZHBqZURneUErUS9kWitWcEZaZk1xMmZ1dHZPN0pnVHFqY0c0dEhMTGsrUFAyClV0dkYvbkdGZmFEbUdXUTkxOEVrSk5jRGZOZ05VWTRvV21pYkdDR2Y5ZFJRTWcvQWI2dndKRHRlS1FreDFKbGEKZXRWTS9Xb01SS2tDeXZvSGNMV2t5VkNhdGd2K2VyNHUxQU9GdGxVZGFtbXdUemJFYTJCUmV4bDIwVW9rSWFGUAphWkRrSzJJbVQ0RFhUZUEvakNySGFzY25zdHdmSkFTSVVVWXhqcklSNWxQYUwwdWhqK2lXVHBnWmdTeFhEYitEClBSRkx4a2srNGVlQ1RWVGo0ZkJHUlY0b3I5cGYybi9qQWJQbkRjNUNaZndUQ2l5MlZJRTVZNkVDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkt6QwpWdDNPcHNzcGVENlZXTFpmUklwSGRlUWpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJUenFPZU9aS2N0Q29xClF1MXkrTEV5d2dOQ1pURU5BRWJ6eXZtSlpKRk4yT2NCSmFMNVNrTllESXRPU3lFSE9mSStyQ01GZGROK2twazcKWlg0Ly94eDJ0Qk13c1drNzJQZ2lacXlVbjI1LzhrMFIxYkVTeFA0amhFMjRyTy9qTUUrRG5sWXdkSzBwdm4wYgowaUhPR1lmaUlrblpIbXBGR0pOQURGRGRyQU1pTUtnY2RBUk9EQTNlSStUdStBTDNqQnJzTHhOc0RJQmFPYkNaCk9oenNORE1FL2ZkM2ZpVzcwYlEzNDl1Lzg5S25TV3haclNQRndBakowRHNBSHltZldQZnZXMU1FZjRiL0JWNGMKUVNQUDRLL0RQQUM1TXlrbktLL0NQRDgwUXdDalorNXhWakFBVjVVbGRYM3BxYkE0eEtkMlQzUkt4SHZ5T0lqWQpaMVQ2YmJWaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUhEelU3bGhKQmhzd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1UQXhOekUwTVRnME9Gb1hEVEk1TVRBeE5ERTBNVGcwT0Zvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1OGtQNFh6N2dlYngKRVFCeHZJdEoxdWdMdmdFZXdUNGJQdWZoSEFqNy9Nc2JpNEdGa3JURFFCaERNcnJUOVNJRmJCTFFmZXloaGhCOApYZTNleVllYTh5TlpMcnNiTGREOWZGY0NwTkdwL0lFRnlXVndVbm9iRG16ZXJ4bHNuZWNWZ0dZNUFhQWg2clJ4CjVlVHNmTTRrbHRZZVBEV2RFZmRWKytpVjhIbjJpejBiZXpiejZGbk5HU0xkckZEajJRYmhOZG5CV1JEMGZoaVEKdXdac2pWcExGSGZ6QTdGRWozYThjeFp5YlVCVVVST0ZMZjBaazFSL3lyWm13OGlwQnI5bURyR3Q0Q0xrYWUzKwpRanJRZmIybXdjN0NHTUk2U3VTdDUza1lsUVhUTGhDeUZ0SDV6OFlmYm9hdW04aThJQXFhNjl0M09UWG1nbHJ0CmtUQy9EQ1JIWHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVlCbGN2dmxOV1YzOUJRaU1UeWUyaXpZWXMwd3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUpEOFNnZVNNTUJuNXRNaEg5M2MxUlVBTHZNSUVVZHFOcGdjOS9SQVlCTXlFNU9xSDNhV1dOUjJXY2RpCnl2OUZ3T3NRZjZoWkxZRENYY1ZuMnRnSHIzNWNKSnJoNjNFZE9EWnVCTTQ3UmNhTGo4WVhRaXR4UERiSlAvY2cKNHZLR3BnMytCbFgxTXdxZWVNbU1BN3FreWVZWHk1QUFXMmVOK1hXVE1SN3BhaCtic0Z5Tzk0cndWanU4OHVFeQp5UXZ6aWpEMkM3SkRqRDJ1Nk5ETW5MNSt6d0l6V2d3SUMzTTA1ZUxqSlE5N2lVVTZ0aXdMbDVxT0wrOS91MzhQClU5TVgzMVl4TldtdWMrVFRNWWk5dUJXdHc1ZE5zVW5sZGhPRUNDVVlNaW0xNVFzVThUNGU1ZEVPazVnVnBTc3MKUlUreGExd3VCVkNzTG5sUUVhN3d3NzNDc0JZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSU5rUEt3N0Yxb01vd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRBeE56RTBNVGcwT1ZvWERUSTVNVEF4TkRFME1UZzBPVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXJ5RjBOK2h4MjIvbE1CcWFhWFRKTnpWUVJUR28rbnVCWmRKR3Z1dHRGdUdtVEEwalVNS1V1N1V2QXM4MwptNXcwZlFOd00rQ2g0d0pxbWdueGZ6cG9PWnpLZ05SeVVZcjd3bDM3b3JvYjUrWjVVQmE3elhGdFRTVVlQbE9lCk9QM0lDaWM0QVU1V2ZpYmQrczV5elBFeHhzbkVPc3BTN1Z1czd2VElVKzlvQ2tGaDZGL01IcjcrNFhNUXAxTFcKOVFVNDJtcnBzOUlacEYzeTkvYWFtRHdnMDR1d2ErbkhSc01BRm1YSWU5SDdCWjlyVnFwL3ZSTXVVeHNGQjM3dgpEcElVRFNFeEFxNU16VW15cHN6NTdiZElwZW9NM1VncE9obFlQa04wTjVsTWxsVWNna2srT3FFTDVJZzBRL0xPCk12T2hYSnZDd2hmemFaV2FBc2cvaU5jUnB3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVTQjhtT1RBeWhhQmZIcUQyQkY5dHhUUC9WcUl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDS1BFV1FJZ2NlSXpISWFmMjBIWWFFZHdVOERPRjNITDNDcDlnRVBUMWdxCmdmVXRVTkxRWktTNzJpZVZ1NHBTNE9xZUtJNDRGNitodUNNZkxWZTdjRkttR1VKYldqT1pZM1I3YVl6QThjT1IKVTgyMnZpeHFMMW1RN1dHelVZWGprTmVxcHZxNFppVk53bDBuZVJBNVZVZFJqdzI1d0xHYjdoRXVGQXRxY2dZRQpqSWZ5VjVIaERnMVV1ZmpWUzN3OU9wZFNEVjNiSTFybmt3UWF1Z1hCM0oxVU12NlBDNTh5bHVyS2ZUUC9KcjVGCkp2UE9KZVVGZ3V3c2VqRU9IOEtPOFRrMDJ1ckUyTXMzMDYxNzBJOWF3d2lkQ1NZMUl6SXlHSnJMaTZpR2FjTFgKRmpDQlJUS0ZxN3Z5aTRJbGVCWVpLVFVZRUpRU3lvU3pvVWt1ZDNxSFJCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU56RXpNak14TWpZd0hoY05NVGt4TURFM01UUXpPRFExV2hjTk1qRXhNREUyCk1UUXpPRFEyV2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFOekV6TWpNeE1qWXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFdUbXJqaEhodUtjV044L0YvZCtTTQpZZVhpbUZjU0RmZGR0NmoxWWIzdjRqc21lZVR2aVhFdG9jcEtpNVRNZDZ3Mm1kUmlpZWtPaDVqZVQ2RDBhY1NJCnVvbEk1b1EyazJCMVpkeXFHZURWVXpsRE92QzFwUnVLeDdhSDh2QUNQTFlDV0FJbktQSTJUV28zem5GZzJzZmUKT2hTdGp0SVV0WjNBSTVlK3N2ZUJPQmtPdkFlbFdnK2FZM0RVNEFKVC9yZUg2TjN3aWg5VC96bTZ4WWdEUWRlaQp0SjdNOW8yV3FXNzFiQzc3Y3M0Njk5TitWLzNhTlFLS241ZXdUbEtOL0x5ajZjdjhaSC9GMkwwUzliVXJNcFZjClNuUjhvWXAyUzM1ZDUwWS9QckN0U0tyWGtJRVNVSkV6UXFEOG1lbTNOcXFpdklRL1JQOEhJaUEyVktZczdOVlQKQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRRE1vb2VVdW5mUXlqYVF1amdoYkR3L3cyQ1BZbzY1QWlDVXJmSmxhaWpwCmVxcFkvdi8ybVhMNCsrWnN2Smp0RmZ2UDhVbjV2Yjh4RVhzeVZhdzM0bVlxNzBkNjdMM3lEM01rWjlpL0VEMmEKNUNOaDcxdjV1WUdDSEQ2SlZLcjFkYTVidlRDY0RUMjR4S0JodkFRUVcxbmVwTmdld2trY3UvMWxnT0R3bExXQQpUVEUzSzljTW56dFoyNXBVVHF0NEFNL0o0eCtSQXpWWStjL04rVDA0WnF3NGRtUVRHaEJ6aW9yRHVScVNJM25rCnM1cjZsSTVrMGluT3ZnMEVRWEtXa2lLVEp4YjhDM1VvNEpRM2g0S0NDWHN5TE9PcHg4cTNzTWdvRmsxNW9iQlcKTnpJOUhlNUVqYTFPcjVVZnR4Y3RVdjJoZmxuOEdTM3RBSVFJdEwraEdIMHQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
#SERVICE_CA_CRT="LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJUWphOGNhS3J3NnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1ERTNNVFF4T0RRNVdoY05Namt4TURFME1UUXhPRFE1V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlFXaS9sS0lURFgxNHFRVkd4Z3dsdGJ2a0ZQQkE5cgpPZnk3WWg4VW52NHJ4VWU1TE02ZHBqZURneUErUS9kWitWcEZaZk1xMmZ1dHZPN0pnVHFqY0c0dEhMTGsrUFAyClV0dkYvbkdGZmFEbUdXUTkxOEVrSk5jRGZOZ05VWTRvV21pYkdDR2Y5ZFJRTWcvQWI2dndKRHRlS1FreDFKbGEKZXRWTS9Xb01SS2tDeXZvSGNMV2t5VkNhdGd2K2VyNHUxQU9GdGxVZGFtbXdUemJFYTJCUmV4bDIwVW9rSWFGUAphWkRrSzJJbVQ0RFhUZUEvakNySGFzY25zdHdmSkFTSVVVWXhqcklSNWxQYUwwdWhqK2lXVHBnWmdTeFhEYitEClBSRkx4a2srNGVlQ1RWVGo0ZkJHUlY0b3I5cGYybi9qQWJQbkRjNUNaZndUQ2l5MlZJRTVZNkVDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkt6QwpWdDNPcHNzcGVENlZXTFpmUklwSGRlUWpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJUenFPZU9aS2N0Q29xClF1MXkrTEV5d2dOQ1pURU5BRWJ6eXZtSlpKRk4yT2NCSmFMNVNrTllESXRPU3lFSE9mSStyQ01GZGROK2twazcKWlg0Ly94eDJ0Qk13c1drNzJQZ2lacXlVbjI1LzhrMFIxYkVTeFA0amhFMjRyTy9qTUUrRG5sWXdkSzBwdm4wYgowaUhPR1lmaUlrblpIbXBGR0pOQURGRGRyQU1pTUtnY2RBUk9EQTNlSStUdStBTDNqQnJzTHhOc0RJQmFPYkNaCk9oenNORE1FL2ZkM2ZpVzcwYlEzNDl1Lzg5S25TV3haclNQRndBakowRHNBSHltZldQZnZXMU1FZjRiL0JWNGMKUVNQUDRLL0RQQUM1TXlrbktLL0NQRDgwUXdDalorNXhWakFBVjVVbGRYM3BxYkE0eEtkMlQzUkt4SHZ5T0lqWQpaMVQ2YmJWaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUhEelU3bGhKQmhzd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1UQXhOekUwTVRnME9Gb1hEVEk1TVRBeE5ERTBNVGcwT0Zvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1OGtQNFh6N2dlYngKRVFCeHZJdEoxdWdMdmdFZXdUNGJQdWZoSEFqNy9Nc2JpNEdGa3JURFFCaERNcnJUOVNJRmJCTFFmZXloaGhCOApYZTNleVllYTh5TlpMcnNiTGREOWZGY0NwTkdwL0lFRnlXVndVbm9iRG16ZXJ4bHNuZWNWZ0dZNUFhQWg2clJ4CjVlVHNmTTRrbHRZZVBEV2RFZmRWKytpVjhIbjJpejBiZXpiejZGbk5HU0xkckZEajJRYmhOZG5CV1JEMGZoaVEKdXdac2pWcExGSGZ6QTdGRWozYThjeFp5YlVCVVVST0ZMZjBaazFSL3lyWm13OGlwQnI5bURyR3Q0Q0xrYWUzKwpRanJRZmIybXdjN0NHTUk2U3VTdDUza1lsUVhUTGhDeUZ0SDV6OFlmYm9hdW04aThJQXFhNjl0M09UWG1nbHJ0CmtUQy9EQ1JIWHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVlCbGN2dmxOV1YzOUJRaU1UeWUyaXpZWXMwd3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUpEOFNnZVNNTUJuNXRNaEg5M2MxUlVBTHZNSUVVZHFOcGdjOS9SQVlCTXlFNU9xSDNhV1dOUjJXY2RpCnl2OUZ3T3NRZjZoWkxZRENYY1ZuMnRnSHIzNWNKSnJoNjNFZE9EWnVCTTQ3UmNhTGo4WVhRaXR4UERiSlAvY2cKNHZLR3BnMytCbFgxTXdxZWVNbU1BN3FreWVZWHk1QUFXMmVOK1hXVE1SN3BhaCtic0Z5Tzk0cndWanU4OHVFeQp5UXZ6aWpEMkM3SkRqRDJ1Nk5ETW5MNSt6d0l6V2d3SUMzTTA1ZUxqSlE5N2lVVTZ0aXdMbDVxT0wrOS91MzhQClU5TVgzMVl4TldtdWMrVFRNWWk5dUJXdHc1ZE5zVW5sZGhPRUNDVVlNaW0xNVFzVThUNGU1ZEVPazVnVnBTc3MKUlUreGExd3VCVkNzTG5sUUVhN3d3NzNDc0JZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSU5rUEt3N0Yxb01vd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRBeE56RTBNVGcwT1ZvWERUSTVNVEF4TkRFME1UZzBPVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXJ5RjBOK2h4MjIvbE1CcWFhWFRKTnpWUVJUR28rbnVCWmRKR3Z1dHRGdUdtVEEwalVNS1V1N1V2QXM4MwptNXcwZlFOd00rQ2g0d0pxbWdueGZ6cG9PWnpLZ05SeVVZcjd3bDM3b3JvYjUrWjVVQmE3elhGdFRTVVlQbE9lCk9QM0lDaWM0QVU1V2ZpYmQrczV5elBFeHhzbkVPc3BTN1Z1czd2VElVKzlvQ2tGaDZGL01IcjcrNFhNUXAxTFcKOVFVNDJtcnBzOUlacEYzeTkvYWFtRHdnMDR1d2ErbkhSc01BRm1YSWU5SDdCWjlyVnFwL3ZSTXVVeHNGQjM3dgpEcElVRFNFeEFxNU16VW15cHN6NTdiZElwZW9NM1VncE9obFlQa04wTjVsTWxsVWNna2srT3FFTDVJZzBRL0xPCk12T2hYSnZDd2hmemFaV2FBc2cvaU5jUnB3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVTQjhtT1RBeWhhQmZIcUQyQkY5dHhUUC9WcUl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDS1BFV1FJZ2NlSXpISWFmMjBIWWFFZHdVOERPRjNITDNDcDlnRVBUMWdxCmdmVXRVTkxRWktTNzJpZVZ1NHBTNE9xZUtJNDRGNitodUNNZkxWZTdjRkttR1VKYldqT1pZM1I3YVl6QThjT1IKVTgyMnZpeHFMMW1RN1dHelVZWGprTmVxcHZxNFppVk53bDBuZVJBNVZVZFJqdzI1d0xHYjdoRXVGQXRxY2dZRQpqSWZ5VjVIaERnMVV1ZmpWUzN3OU9wZFNEVjNiSTFybmt3UWF1Z1hCM0oxVU12NlBDNTh5bHVyS2ZUUC9KcjVGCkp2UE9KZVVGZ3V3c2VqRU9IOEtPOFRrMDJ1ckUyTXMzMDYxNzBJOWF3d2lkQ1NZMUl6SXlHSnJMaTZpR2FjTFgKRmpDQlJUS0ZxN3Z5aTRJbGVCWVpLVFVZRUpRU3lvU3pvVWt1ZDNxSFJCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU56RXpNak14TWpZd0hoY05NVGt4TURFM01UUXpPRFExV2hjTk1qRXhNREUyCk1UUXpPRFEyV2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFOekV6TWpNeE1qWXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFdUbXJqaEhodUtjV044L0YvZCtTTQpZZVhpbUZjU0RmZGR0NmoxWWIzdjRqc21lZVR2aVhFdG9jcEtpNVRNZDZ3Mm1kUmlpZWtPaDVqZVQ2RDBhY1NJCnVvbEk1b1EyazJCMVpkeXFHZURWVXpsRE92QzFwUnVLeDdhSDh2QUNQTFlDV0FJbktQSTJUV28zem5GZzJzZmUKT2hTdGp0SVV0WjNBSTVlK3N2ZUJPQmtPdkFlbFdnK2FZM0RVNEFKVC9yZUg2TjN3aWg5VC96bTZ4WWdEUWRlaQp0SjdNOW8yV3FXNzFiQzc3Y3M0Njk5TitWLzNhTlFLS241ZXdUbEtOL0x5ajZjdjhaSC9GMkwwUzliVXJNcFZjClNuUjhvWXAyUzM1ZDUwWS9QckN0U0tyWGtJRVNVSkV6UXFEOG1lbTNOcXFpdklRL1JQOEhJaUEyVktZczdOVlQKQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRRE1vb2VVdW5mUXlqYVF1amdoYkR3L3cyQ1BZbzY1QWlDVXJmSmxhaWpwCmVxcFkvdi8ybVhMNCsrWnN2Smp0RmZ2UDhVbjV2Yjh4RVhzeVZhdzM0bVlxNzBkNjdMM3lEM01rWjlpL0VEMmEKNUNOaDcxdjV1WUdDSEQ2SlZLcjFkYTVidlRDY0RUMjR4S0JodkFRUVcxbmVwTmdld2trY3UvMWxnT0R3bExXQQpUVEUzSzljTW56dFoyNXBVVHF0NEFNL0o0eCtSQXpWWStjL04rVDA0WnF3NGRtUVRHaEJ6aW9yRHVScVNJM25rCnM1cjZsSTVrMGluT3ZnMEVRWEtXa2lLVEp4YjhDM1VvNEpRM2g0S0NDWHN5TE9PcHg4cTNzTWdvRmsxNW9iQlcKTnpJOUhlNUVqYTFPcjVVZnR4Y3RVdjJoZmxuOEdTM3RBSVFJdEwraEdIMHQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="

if [ -z "${TOKEN}" ]
then
    echo "You have to log in in your OCP cluster ;-)"
    exit 1
fi

oc new-project ccn-installer

oc delete secret ccn-token-secret -n ${NAMESPACE}

cat ./ccn-token-secret.yaml | \
  sed "s/{{\b*NAMESPACE\b*}}/$(echo -n ${NAMESPACE} | base64)/" | \
#  sed "s/{{\b*CA_CRT\b*}}/${CA_CRT}/" | \
#  sed "s/{{\b*SERVICE_CA_CRT\b*}}/${SERVICE_CA_CRT}/" | \
  sed "s/{{\b*TOKEN\b*}}/${TOKEN}/" | oc create -n ${NAMESPACE} -f -

oc delete job ccn-installer-batch -n ${NAMESPACE} ;  oc apply -n ${NAMESPACE} -f ./ccn-installer-batch.yaml